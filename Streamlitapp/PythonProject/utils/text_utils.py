import openai

def predict_from_text(symptom_text: str) -> str:
    # token = "eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJGSjg2R2NGM2pUYk5MT2NvNE52WmtVQ0lVbWZZQ3FvcXRPUWVNZmJoTmxFIn0.eyJleHAiOjE3Nzc2Mjk1NDgsImlhdCI6MTc0NjA5MzU0OCwianRpIjoiYzBiMmVjMTMtMzJmOC00OGMzLWE0M2ItN2Y4NmYzOWEzYjU4IiwiaXNzIjoiaHR0cDovL2dhdGV3YXkuZTJlbmV0d29ya3MuY29tL2F1dGgvcmVhbG1zL2FwaW1hbiIsImF1ZCI6ImFjY291bnQiLCJzdWIiOiIwYjk5ZmE1Yy1hYzQxLTQ1ZjktYjg4Ny04MWVlMzMxNWFlZDAiLCJ0eXAiOiJCZWFyZXIiLCJhenAiOiJhcGltYW51aSIsInNlc3Npb25fc3RhdGUiOiI3YjRlYmQ0Yy03ZTEyLTRhZDUtYjZiMy1mM2QwZmY2OTMzZDAiLCJhY3IiOiIxIiwiYWxsb3dlZC1vcmlnaW5zIjpbIiJdLCJyZWFsbV9hY2Nlc3MiOnsicm9sZXMiOlsib2ZmbGluZV9hY2Nlc3MiLCJ1bWFfYXV0aG9yaXphdGlvbiIsImFwaXVzZXIiLCJkZWZhdWx0LXJvbGVzLWFwaW1hbiJdfSwicmVzb3VyY2VfYWNjZXNzIjp7ImFjY291bnQiOnsicm9sZXMiOlsibWFuYWdlLWFjY291bnQiLCJtYW5hZ2UtYWNjb3VudC1saW5rcyIsInZpZXctcHJvZmlsZSJdfX0sInNjb3BlIjoicHJvZmlsZSBlbWFpbCIsInNpZCI6IjdiNGViZDRjLTdlMTItNGFkNS1iNmIzLWYzZDBmZjY5MzNkMCIsImVtYWlsX3ZlcmlmaWVkIjpmYWxzZSwibmFtZSI6IkFua3VzaCBLb3RoaXlhbCIsInByaW1hcnlfZW1haWwiOiJhbmt1c2hrb3RoaXlhbDIwMTJAZ21haWwuY29tIiwiaXNfcHJpbWFyeV9jb250YWN0Ijp0cnVlLCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJhbmt1c2hrb3RoaXlhbDIwMTJAZ21haWwuY29tIiwiZ2l2ZW5fbmFtZSI6IkFua3VzaCIsImZhbWlseV9uYW1lIjoiS290aGl5YWwiLCJlbWFpbCI6ImFua3VzaGtvdGhpeWFsMjAxMkBnbWFpbC5jb20iLCJpc19pbmRpYWFpX3VzZXIiOmZhbHNlfQ.GI_MHzlE4Bu8WzJvE2o437EFGse3UBJJRA13lmqh4BaaHWFAYDKzR1WeVWtfQKBL8kNmuI8oY6yWHLbgr6pjz_0P9X_PttbpaZIP0TXJBr0hmYBzfEwy6-LzogswAC4iygAJL0_SzX3s5qB2gz_o4HGlKE3VQrE2Ax2Peafz9WE"  # Keep your actual token
    token = "eyJhbGciOiJSUzI1NiIsInR5cCIgOiAiSldUIiwia2lkIiA6ICJGSjg2R2NGM2pUYk5MT2NvNE52WmtVQ0lVbWZZQ3FvcXRPUWVNZmJoTmxFIn0.eyJleHAiOjE3Nzc2Mjk1NDgsImlhdCI6MTc0NjA5MzU0OCwianRpIjoiYzBiMmVjMTMtMzJmOC00OGMzLWE0M2ItN2Y4NmYzOWEzYjU4IiwiaXNzIjoiaHR0cDovL2dhdGV3YXkuZTJlbmV0d29ya3MuY29tL2F1dGgvcmVhbG1zL2FwaW1hbiIsImF1ZCI6ImFjY291bnQiLCJzdWIiOiIwYjk5ZmE1Yy1hYzQxLTQ1ZjktYjg4Ny04MWVlMzMxNWFlZDAiLCJ0eXAiOiJCZWFyZXIiLCJhenAiOiJhcGltYW51aSIsInNlc3Npb25fc3RhdGUiOiI3YjRlYmQ0Yy03ZTEyLTRhZDUtYjZiMy1mM2QwZmY2OTMzZDAiLCJhY3IiOiIxIiwiYWxsb3dlZC1vcmlnaW5zIjpbIiJdLCJyZWFsbV9hY2Nlc3MiOnsicm9sZXMiOlsib2ZmbGluZV9hY2Nlc3MiLCJ1bWFfYXV0aG9yaXphdGlvbiIsImFwaXVzZXIiLCJkZWZhdWx0LXJvbGVzLWFwaW1hbiJdfSwicmVzb3VyY2VfYWNjZXNzIjp7ImFjY291bnQiOnsicm9sZXMiOlsibWFuYWdlLWFjY291bnQiLCJtYW5hZ2UtYWNjb3VudC1saW5rcyIsInZpZXctcHJvZmlsZSJdfX0sInNjb3BlIjoicHJvZmlsZSBlbWFpbCIsInNpZCI6IjdiNGViZDRjLTdlMTItNGFkNS1iNmIzLWYzZDBmZjY5MzNkMCIsImVtYWlsX3ZlcmlmaWVkIjpmYWxzZSwibmFtZSI6IkFua3VzaCBLb3RoaXlhbCIsInByaW1hcnlfZW1haWwiOiJhbmt1c2hrb3RoaXlhbDIwMTJAZ21haWwuY29tIiwiaXNfcHJpbWFyeV9jb250YWN0Ijp0cnVlLCJwcmVmZXJyZWRfdXNlcm5hbWUiOiJhbmt1c2hrb3RoaXlhbDIwMTJAZ21haWwuY29tIiwiZ2l2ZW5fbmFtZSI6IkFua3VzaCIsImZhbWlseV9uYW1lIjoiS290aGl5YWwiLCJlbWFpbCI6ImFua3VzaGtvdGhpeWFsMjAxMkBnbWFpbC5jb20iLCJpc19pbmRpYWFpX3VzZXIiOmZhbHNlfQ.GI_MHzlE4Bu8WzJvE2o437EFGse3UBJJRA13lmqh4BaaHWFAYDKzR1WeVWtfQKBL8kNmuI8oY6yWHLbgr6pjz_0P9X_PttbpaZIP0TXJBr0hmYBzfEwy6-LzogswAC4iygAJL0_SzX3s5qB2gz_o4HGlKE3VQrE2Ax2Peafz9WE"  # Keep your actual token

    openai.api_key = token
    # openai.base_url = "https://infer.e2enetworks.net/project/p-5498/endpoint/is-4848/v1/"
    openai.base_url = "https://infer.e2enetworks.net/project/p-5498/endpoint/is-4850/v1/"

    prompt = f"Below is a set of medical symptoms. Predict the most likely rare disease:\n{symptom_text}\nPrediction:"

    try:
        response = openai.completions.create(
            model="peft-model",
            prompt=prompt,
            max_tokens=250,
        )
        return response.choices[0].text.strip()
    except Exception as e:
        raise RuntimeError(f"Error during prediction: {e}")
